JSON的全称为JavaScript Object Notation是一种用于存储和传输数据的格式。JSON是一种轻量级的文本数据交换格式与xml类似但比XML 更小、更快、更易理解和解析。

#简单来说JSON就像字符串、列表、元组一样用来存储和传输数据。
#Js 语法规则1. 数据以 {键:值} 的形式呈现。

#JSON数据与字典类似是由键值组成的每一对键值都是以“:”进行连接键必须是字符串并由双引号包围引号中填写具体内容。

#示例使用var JSONObj = {};创建了JSON对象对象中的name就是键Alex就是值其他的年龄、性别、身高信息也是键值对的形式。
#2. 数据与数据之间以逗号分隔。

#单个数据是以 {键:值} 呈现多个数据使用英文逗号(,)进行连接。

#并且JSON数据类型可以有以下几种
#"Alex"是字符串类型；
#0是整型
#true是布尔型
#1.85是浮点型；
#["Python", "Java"]是列表等。
var JSONObj = {
"name":"Alex",
"age":20,
"gender":true,
"height":1.85,
"skills":[
    "Python", 
    "Java"
  ]
}
#3. 方括号[]表示数组。

#"dance":[]和"vocal":[]表示两组数据数组的值存放格式与列表相似。

#列表中每一项以英文逗号(,)进行分割所以数组中的每项也以英文逗号(,)进行分割例如 dance组中有两个学生数据每个学生数据以大括号来存储。
var stu = {
  "dance":[
    {"name":"Alex","age":20},
    {"name":"Tad","age":18}
  ],
  "vocal":[
    {"name":"Eric", "age":18},
    {"name":"Jar", "age":19}
  ]
}
print(var stu)
4. 大括号{}用于保存对象
数组中每项以大括号{}包围起来的就是对象dance的对象包含了两个学生数据。
上节课获取到的数据最外层是fetchJSON_comment98();的形式保存的与学到的JSON格式不一样。

所以要先进行数据处理去掉最左边的 fetchJSON_comment98( 和最右边的 );剩下的就是JSON格式的数据。
lstrip() 可用于移除字符串左边的空格或字符串。

使用 lstrip() 函数后可以赋值给新的变量原变量内容不改变。
strip() 函数的括号中用于存放需要移除的最左边的字符字符使用双引号包围起来。

使用 lstrip() 函数时该函数从最左侧依次判断每个字符遇到非指定字符内容就停止。

右侧代码中lstrip() 函数从最左侧依次判断每个元素是否为0遇到字母“T”就停止所以This is中间的0没有被移除。
string = "000This 0 is an Example.000" 
newString = string.lstrip("0")
print(string)
print(newString)
000This is an Example.000
This is an Example.000
#区分strip() lstrip()需要赋值新的变量
str = "00000003210Runoob01230000000"; 
print str.strip( '0' );  # 去除首尾字符 0
3210Runoob0123
json.loads()函数能够对数据进行解码将JSON数据与Python的数据类型进行转化
str 》》》dict
json.loads() 函数能够对数据进行解码,将JSON数据与Python的数据类型进行转化目的是能在Python中处理JSON数据 。

使用 json.loads() 函数时将JSON数据传入括号中就能将字符串类型数据转换成字典类型的数据。

解码成的数据类型需要看JSON对应的格式格式为字典就会转成字典为列表就会转成列表。
